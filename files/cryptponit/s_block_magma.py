'''block = [
        ['C', '4', '6', '2', 'A', '5', 'B', '9',
            'E', '8', 'D', '7', '0', '3', 'F', '1'],
        ['6', '8', '2', '3', '9', 'A', '5', 'C',
            '1', 'E', '4', '7', 'B', 'D', '0', 'F'],
        ['B', '3', '5', '8', '2', 'F', 'A', 'D',
            'E', '1', '7', '4', 'C', '9', '6', '0'],
        ['C', '8', '2', '1', 'D', '4', 'F', '6',
            '7', '0', 'A', '5', '3', 'E', '9', 'B'],
        ['7', 'F', '5', 'A', '8', '1', '6', 'D',
            '0', '9', '3', 'E', 'B', '4', '2', 'C'],
        ['5', 'D', 'F', '6', '9', '2', 'C', 'A',
            'B', '7', '8', '1', '4', '3', 'E', '0'],
        ['8', 'E', '2', '5', '6', '9', '1', 'C',
            'F', '4', 'B', '0', 'D', 'A', '3', '7'],
        ['1', '7', 'E', 'D', '0', '5', '8', '3', '4', 'F', 'A', '6', '9', 'C', 'B', '2']]

b_index = ['0', '1', '2', '3', '4', '5', '6',
           '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f']

alphabet = 'абвгдежзийклмнопрстуфхцчшщъыьэюя'
# print()
# text = input('Введите текст: ')
text = ('цепьнекрепчесвоегосамогослабогозвенатчк')

length = len(text)

s_block_str_num = 0  # счетчик строки s-block'а

code = ''

for i in range(length):
    symb = text[i]
    # в цикле перебираем буквы исходного текста
    index_symb = alphabet.index(symb)
    # узнаем индекс буквы в алфавите (очередность)
    symb_16 = hex(index_symb)[2:]
    # Перевод номера буквы в 16-ричную систему ( [2:] - и убираем в начале 0x)
    if len(symb_16) != 2:
        symb_16 = str(0) + symb_16
    # Если в числе 16-ной системы один символ, то добавляем в начало ноль
    for j in range(2):
        index_symb_16 = b_index.index(symb_16[j])
        # ищем номер символа буквы в b_index (на примере м = 0с это номер 0, потом номер c)
        code = code + block[s_block_str_num][index_symb_16]
        # записываем в итоговый текст наш зашифрованный символ (s_block_str_num - строка, index_symb_16 - столбец)
        s_block_str_num = (s_block_str_num + 1) % 8
        # увеличиваем номер S-блока, если 8, то снова идем с 0
print()
print('Шифртекст:', code)

decode = ''
s_block_str_num = 0

for i in range(0, len(code)-1, 2):
    buf = ''
    for j in range(2):
        index_symb_16 = block[s_block_str_num].index(code[i+j])
        s_block_str_num = (s_block_str_num + 1) % 8
        buf += b_index[index_symb_16]
    if buf[0] == '0':
        buf = buf[1]
        decode += alphabet[int(buf, 16)]
    else:
        decode += alphabet[int(buf, 16)]
print()
print('Расшифровка:', decode)
print()
'''
# ------------------ для терминала --------------------
def s_block_magma_crypt():
    block = [
            ['C', '4', '6', '2', 'A', '5', 'B', '9',
                'E', '8', 'D', '7', '0', '3', 'F', '1'],
            ['6', '8', '2', '3', '9', 'A', '5', 'C',
                '1', 'E', '4', '7', 'B', 'D', '0', 'F'],
            ['B', '3', '5', '8', '2', 'F', 'A', 'D',
                'E', '1', '7', '4', 'C', '9', '6', '0'],
            ['C', '8', '2', '1', 'D', '4', 'F', '6',
                '7', '0', 'A', '5', '3', 'E', '9', 'B'],
            ['7', 'F', '5', 'A', '8', '1', '6', 'D',
                '0', '9', '3', 'E', 'B', '4', '2', 'C'],
            ['5', 'D', 'F', '6', '9', '2', 'C', 'A',
                'B', '7', '8', '1', '4', '3', 'E', '0'],
            ['8', 'E', '2', '5', '6', '9', '1', 'C',
                'F', '4', 'B', '0', 'D', 'A', '3', '7'],
            ['1', '7', 'E', 'D', '0', '5', '8', '3', '4', 'F', 'A', '6', '9', 'C', 'B', '2']]

    b_index = ['0', '1', '2', '3', '4', '5', '6',
            '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f']

    alphabet = 'абвгдежзийклмнопрстуфхцчшщъыьэюя'
    text = input('Введите текст: ')
    # text = ('цепьнекрепчесвоегосамогослабогозвенатчк')
    length = len(text)
    s_block_str_num = 0  
    code = ''
    for i in range(length):
        symb = text[i]
        index_symb = alphabet.index(symb)
        symb_16 = hex(index_symb)[2:]
        if len(symb_16) != 2:
            symb_16 = str(0) + symb_16
        for j in range(2):
            index_symb_16 = b_index.index(symb_16[j])
            code = code + block[s_block_str_num][index_symb_16]
            s_block_str_num = (s_block_str_num + 1) % 8
    print()
    print('Шифртекст:', code)

def s_block_magma_decrypt():
    block = [
            ['C', '4', '6', '2', 'A', '5', 'B', '9',
                'E', '8', 'D', '7', '0', '3', 'F', '1'],
            ['6', '8', '2', '3', '9', 'A', '5', 'C',
                '1', 'E', '4', '7', 'B', 'D', '0', 'F'],
            ['B', '3', '5', '8', '2', 'F', 'A', 'D',
                'E', '1', '7', '4', 'C', '9', '6', '0'],
            ['C', '8', '2', '1', 'D', '4', 'F', '6',
                '7', '0', 'A', '5', '3', 'E', '9', 'B'],
            ['7', 'F', '5', 'A', '8', '1', '6', 'D',
                '0', '9', '3', 'E', 'B', '4', '2', 'C'],
            ['5', 'D', 'F', '6', '9', '2', 'C', 'A',
                'B', '7', '8', '1', '4', '3', 'E', '0'],
            ['8', 'E', '2', '5', '6', '9', '1', 'C',
                'F', '4', 'B', '0', 'D', 'A', '3', '7'],
            ['1', '7', 'E', 'D', '0', '5', '8', '3', '4', 'F', 'A', '6', '9', 'C', 'B', '2']]

    b_index = ['0', '1', '2', '3', '4', '5', '6',
            '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f']

    alphabet = 'абвгдежзийклмнопрстуфхцчшщъыьэюя'
    code = input('Введите шифртекст: ')
    decode = ''
    s_block_str_num = 0

    for i in range(0, len(code)-1, 2):
        buf = ''
        for j in range(2):
            index_symb_16 = block[s_block_str_num].index(code[i+j])
            s_block_str_num = (s_block_str_num + 1) % 8
            buf += b_index[index_symb_16]
        if buf[0] == '0':
            buf = buf[1]
            decode += alphabet[int(buf, 16)]
        else:
            decode += alphabet[int(buf, 16)]
    print()
    print('Расшифровка:', decode)